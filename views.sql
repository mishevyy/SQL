/*--------------------------------------------------------------------------------------------------*/
/*----------------------------Представления (View)--------------------------------------------------*/

-- Представления или Views представляют виртуальные таблицы. Но в отличии от обычных стандартных таблиц в 
-- базе данных представления содержат запросы, которые динамически извлекают используемые данные.

-- Представления дают нам ряд преимуществ. Они упрощают комплексные SQL-операции. Они защищают данные, 
-- так как представления могут дать доступ к части таблицы, а не ко всей таблице. Представления также 
-- позволяют возвращать отформатированные значения из таблиц в нужной и удобной форме

-- CREATE VIEW название_представления [(столбец_1, столбец_2, ....)]
-- AS выражение_SELECT

-- Создание представления
CREATE VIEW OrdersProductsCustomers AS
SELECT Orders.CreatedAt AS OrderDate, 
        Customers.FirstName AS Customer,
        Products.ProductName As Product  
FROM Orders INNER JOIN Products ON Orders.ProductId = Products.Id
INNER JOIN Customers ON Orders.CustomerId = Customers.Id

-- Изменение представления
-- ALTER VIEW название_представления [(столбец_1, столбец_2, ....)]
-- AS выражение_SELECT

-- Удаление представления
-- DROP VIEW OrdersProductsCustomers


/*--------------------------------------------------------------------------------------------------*/
/*----------------------------Обновляемое представление---------------------------------------------*/

-- Представления могут быть обновляемыми (updatable). 
-- В таких представлениях мы можем изменить или удалить строки или добавить в них новые строки.
-- При создании подобных представлений есть множество ограничений. 
-- В частности, команда SELECT при создании обновляемого представления не может содержать:
-- TOP
-- DISTINCT
-- UNION
-- JOIN
-- агрегатные функции типа COUNT или MAX
-- GROUP BY и HAVING
-- подзапросы
-- производные столбцы или столбцы, которые вычисляются на основании нескольких значений
-- обращения одновременно к нескольким таблицам


/*--------------------------------------------------------------------------------------------------*/
/*----------------------------Временные и производные таблицы---------------------------------------*/

-- После создания все временные таблицы сохраняются в таблице tempdb, которая имеется по умолчанию в MS SQL Server.
-- Если необходимо удалить таблицу до завершения сессии базы данных, то для этой таблицы следует выполнить команду DROP TABLE.
-- Название временной таблицы начинается со знака решетки #. Если используется один знак #, то создается локальная таблица, 
-- которая доступна в течение текущей сессии. Ели используются два знака ##, то создается глобальная временная таблица. 
-- В отличие от локальной глобальная временная таблица доступна всем открытым сессиям базы данных.
SELECT * FROM #ProductSummary

-- Производные таблицы
-- Кроме временных таблиц MS SQL Server позволяет создавать производные таблицы, которые в плане производительности 
-- являются более эффективным решением, чем временные. Производная таблица задается с помощью ключевого слова WITH:
WITH OrdersInfo AS
(
    SELECT ProductId, 
        SUM(ProductCount) AS TotalCount, 
        SUM(ProductCount * Price) AS TotalSum
    FROM Orders
    GROUP BY ProductId
)
SELECT * FROM OrdersInfo -- здесь доступна
SELECT * FROM OrdersInfo -- здесь уже не доступна
