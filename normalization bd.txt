Нормализация представляет процесс разделения данных по отдельным связанным таблицам. 
Нормализация устраняет избыточность данных (data redundancy) и тем самым избежать нарушения целостности 
данных при их изменении, то есть избежать аномалий изменения (update anomaly).

Как правило, нормализация преимущественно применяется при восходящем подходе проектировании базы данных, 
то есть когда мы все атрибуты, которые надо сохранить в бд, группируем по сущностям, для которых затем 
создаются таблицы. Однако при нисходящем подходе, когда вначале выявляются сущности, а затем их атрибуты и 
связи между ними, нормализация также может применяться, например, для проверки корректности спроектированных таблиц.

В ненормализованной форме таблица может хранить информацию о двух и более сущностях. 
Также она может содержать повторяющиеся столбцы. Также столбцы могут хранить повторяющиеся значения. 
В нормализованной же форме каждая таблица хранит информацию только об одной сущности.

Нормализация предполагает применение нормальных форм к структуре данных. 
Существуют 7 нормальных форм. Каждая нормальная форма (за исключением первой) подразумевает, 
что к данным уже была применена предыдущая нормальная форма. Например, прежде чем применить третью 
нормальную форму к данным должна быть применена вторая нормальная форма. И строго говоря, 
база данных считается нормализованной, если к ней применяется третья нормальная форма и выше.

Первая нормальная форма (1NF) предполагает, что сохраняемые данные на пересечении строк и столбцов должны представлять 
скалярное значение, а таблицы не должны содержать повторяющихся строк.

Вторая нормальная форма (2NF) предполагает, что каждый столбец, не являющийся ключом, должен зависеть от первичного ключа.

Третья нормальная форма (3NF) предполагает, что каждый столбец, не являющийся ключом, должен зависеть только от первичного ключа.

Нормальная форма Бойса-Кодда (BCNF) является немного более строгой версией третьей нормальной формы.

Четвертая нормальная форма (4NF) применяется для устранения многозначных зависимостей (multivalued dependencies) - 
таких зависимостей, где столбец с первичным ключом имеет связь один-ко-многим со столбцом, который не является ключом. 
Эта нормальная форма устраняет некорректные отношения многие-ко-многим.

Пятая нормальная форма (5NF) разделяет таблицы на более малые таблицы для устранения избыточности данных. 
Разбиение идет до тех пор, пока нельзя будет воссоздать оригинальную таблицу путем объединения малых таблиц.

Шестая нормальная форма (domain key normal form / 6NF). Каждое ограничение в связях между таблицами должно зависеть 
только от ограничений ключа и ограничений домена, где домен представляет набор допустимых значений для столбца. 
Эта форма предотвращает добавление недопустимых данных путем установки ограничения на уровне отношений между таблицами, 
но не на уровне таблиц или столбцов. Данная форма, как правило, не применима на уровне СУБД, в том числе и в SQL Server.

Функциональная зависимость
Ключевым понятием нормализации является функциональная зависимость. 
Функциональная зависимость описывает связь между атрибутами отношения. 
Например, если атрибут В функционально зависит от атрибута А (А → В), то каждое значение атрибута А 
связано только с одним значением атрибута В. Причем атрибуты А и В могут состоять из одного или нескольких атрибутов. 
То есть, если две строки имеют одно и то же значение атрибута А, то они обязательно имеют одно и то же значение атрибута В. 
При этом для одного значения атрибута В могут существовать несколько различных значений атрибута А. 
Атрибут А в этой зависимости еще называется детерминантом.

Например, возьмем следующую таблицу, которая представляет университетские курсы:

Course	Teacher	Position
Математика	Смит	Профессор
Алгориты	Адамс	Ассистент
JavaScript	Адамс	Ассистент
Здесь атрибут Teacher функционально зависит от атрибута Course (Course → Teacher). 
То есть зная название курса, мы можем определить его преподавателя. И в этом случае можно говорить, 
что между атрибутами Course и Teacher есть связь 1:1, а между Teacher и Course связь 1:N, 
так как есть несколько курсов, которые может вести один преподаватель. 
При этом атрибут Course функционально не зависит от атрибута Teacher.

Кроме того, здесь можно проследить еще две функциональных зависимости. В частности, атрибут Position 
зависит от атрибута Teacher (Teacher → Position). Зная имя преподавателя, мы можем определить его должность.

И также атрибут Position функционально зависит от атрибута Course - зная название курса, 
мы можем сказать должность преподавателя.

В таблице в нормализованной базе данных единственным детерминантом должен быть атрибут, 
который является первичным ключом. А все остальные атрибуты должны функционально зависеть от первичного ключа.

Например, в данном случае мы можем взять в качестве первичного ключа название курса с учетом, 
что курсы могут иметь только уникальные названия. Однако должность преподавателя в данном случае будет зависеть 
сразу от двух атрибутов - от Course и Teacher. И подобные зависимости могут свидетельствовать о том, что база 
данных и конкретно таблица курсов имеет недостатки в проектировании и может быть источником аномалий обновления.

/*--------------------------------------------------------------------------------------------------------------*/

Первая нормальная форма
Первая нормальная форма предполагает, что таблица не должна содержать повторяющихся столбцов или таких столбцов, 
которые содержат наборы значений. Ненормализованная таблица в этом случае может содержать одну или несколько 
повторяющихся групп данных. Повторяющаяся группа - это группа из одного или нескольких атрибутов таблицы, 
в которой возможно наличие нескольких значений для ключевого атрибута таблицы.

Итогом применения первой формы должно стать наличие для одного атрибута сущности только одного столбца в таблице, 
который при этом должен содержать скалярное значение.

/*--------------------------------------------------------------------------------------------------------------*/

Вторая нормальная форма
Во второй нормальной форме каждый столбец в таблице, который не является ключом, должен зависеть от ключа.

Ключевой момент второй нормальной формы - полная функциональная зависимость. Она предполагает, что атрибут В 
полностью функционально зависим от атрибута А, если атрибут В функционально зависит от полного значения 
атрибута А, а не от какого-либо подмножества значений из атрибута А. То есть, если атрибут А составляют 
несколько значений, скажем, А1 и А2, то атрибут В полностью функционально зависит от А, если он зависит и от А1 и от А2 (А1, А2 → В).

Если атрибут В зависит только от какого-либо подмножества из атрибута А, например, только от А1, то имеет 
место частичная функциональная зависимость.

Эта форма применяется к тем таблицам, которые имеют составной первичный ключ, то есть где первичный ключ 
состоит из нескольких атрибутов. Если в таблице несоставной первичный ключ, то в этом случае считается, 
что все остальные атрибуты автоматически находятся в полной функциональной зависимости от первичного ключа.

Вторая нормальная форма применяется только к тем таблицам, которые находятся в первой нормальной форме. 
После применения второй формы все столбцы таблицы зависят от первичного ключа.

/*--------------------------------------------------------------------------------------------------------------*/

Третья нормальная форма
Третья нормальная форма предполагает, что каждый столбец, не являющийся ключом, должен зависеть 
только от столбца, который является ключом, то есть должна отсутствовать транзитивная 
функциональная зависимость (transitive functional dependency)

Транзитивная функциональная зависимость выражается следующим образом: А → В и В → С. То есть атрибут С 
транзитивно зависит от атрибута А, если атрибут С зависит от атрибута В, а атрибут В зависит от атрибута А 
(при условии, что атрибут А функционально не зависит ни от атрибута В, ни от атрибута С).

Если столбец зависит не только от первичного ключа, то данный столбец находится не в той таблице, 
в которой он должен находиться, либо же является производным от других столбцов.

Для нормализации из исходной таблицы те атрибуты, которые находятся в транзитивной зависимости от ключа, 
выносятся в отдельную таблицу с копией того атрибута, от которого они непосредственно зависят.

При применении третьей нормальной формы таблица должна находиться во второй нормальной форме. 
3NF позволяет значительно снизить избыточность данных.


